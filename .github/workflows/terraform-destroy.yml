name: "Terraform Destroy"

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  TF_VAR_cloudflare_token: "${{ secrets.CLOUDFLARE_TOKEN }}"
  TF_VAR_cloudflare_account_id: "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
  TF_VAR_cloudflare_zone_id: "${{ secrets.CLOUDFLARE_ZONE_ID }}"
  TF_VAR_access_tunnel_clancy_password: "${{ secrets.ACCESS_TUNNEL_CLANCY_PASSWORD }}"
  TF_VAR_gh_client_id: "${{ secrets.GH_CLIENT_ID }}"
  TF_VAR_gh_client_secret: "${{ secrets.GH_CLIENT_SECRET }}"

jobs:
 terraform-destroy-dev:
    if: (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/dev') || (github.event_name == 'pull_request' && github.event.action == 'synchronize' && github.ref == 'refs/heads/dev')
    name: "Terraform Destroy (dev)"
    environment: dev
    env:
      TF_VAR_env: "dev"
      TF_WORKSPACE: "morrislan-dev"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TFC_TOKEN }}

      - name: Initialize Terraform
        id: init
        run: terraform init

      - name: Destroy
        id: destroy
        run: terraform destroy --auto-approve
