name: "CI"
permissions:
  contents: read
  packages: write
  id-token: write
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-homepage:
    name: "Build - homepage"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./apps/homepage
          push: true
          tags: ghcr.io/homescalecloud/homepage:${{ github.sha }}
      - name: Build latest
        id: build-latest
        uses: docker/build-push-action@v6
        if: github.ref == 'refs/heads/main'
        with:
          context: ./apps/homepage
          push: true
          tags: ghcr.io/homescalecloud/homepage:latest
  deploy-terraform:
    name: "Deploy - Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./deploy/terraform
    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "false"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Import Secrets
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          TFC_TOKEN: op://github-actions/terraform-cloud/credential
          TF_VAR_cloudflare_token: op://common/cloudflare/credential
          TF_VAR_cloudflare_account_id: op://common/cloudflare/account-id
          TF_VAR_cloudflare_zone_id: op://common/cloudflare/zone-id
          TF_VAR_digitalocean_token: op://common/digitalocean/credential
          TF_VAR_digitalocean_spaces_id: op://common/digitalocean/spaces-access-key-id
          TF_VAR_digitalocean_spaces_key: op://common/digitalocean/spaces-secret-access-key
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: $TFC_TOKEN
      - name: Format Check
        id: fmt-check
        run: terraform fmt -check
      - name: Initialize
        id: init
        run: terraform init
      - name: Validate
        id: validate
        run: terraform validate
      - name: Plan
        id: plan
        run: terraform plan -out=tfplan
      - name: Apply
        run: terraform apply -auto-approve tfplan
        if: github.ref == 'refs/heads/main'
