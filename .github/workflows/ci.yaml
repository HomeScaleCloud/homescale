name: "CI"
permissions:
  contents: read
  packages: write
  id-token: write
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    name: "Build - ${{ matrix.name }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: homepage
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/homescalecloud/${{ matrix.name }}
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: ./apps/${{ matrix.name }}/src
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
  release:
    name: "Release â€“ ${{ matrix.name }}"
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: home-assistant
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Helm
        uses: azure/setup-helm@v4.3.1
        with:
          version: v3.18.6
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Package Helm chart
        run: |
          helm package ./apps/${{ matrix.name }}
      - name: Push Helm chart
        run: |
          CHART_VERSION=$(yq '.version' ./apps/${{ matrix.name }}/Chart.yaml)
          helm push ${{ matrix.name }}-${CHART_VERSION}.tgz oci://ghcr.io/homescalecloud/helm
  infra-terraform:
    name: "Infra - Terraform"
    runs-on: ubuntu-latest
    needs: 
      - build
      - release
    defaults:
      run:
        shell: bash
        working-directory: ./infra/terraform
    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "false"
      TF_VAR_op_service_account_token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Import Secrets
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          TF_TOKEN_app_terraform_io: op://github-actions/terraform-cloud/credential
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Format Check
        id: fmt-check
        run: terraform fmt -check
      - name: Initialize
        id: init
        run: terraform init
      - name: Validate
        id: validate
        run: terraform validate
      - name: Plan
        id: plan
        run: terraform plan -out=tfplan
      - name: Apply
        run: terraform apply -auto-approve tfplan
        if: github.ref == 'refs/heads/main'