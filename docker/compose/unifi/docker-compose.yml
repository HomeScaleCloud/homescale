name: unifi
services:
  database:
    image: docker.io/mongo:6.0
    command: mongod
    environment:
      - UNIFI_DB_PASS=${UNIFI_DB_PASS}
      - UNIFI_DB_ROOT_PASS=${UNIFI_DB_ROOT_PASS}
    restart: unless-stopped
    networks:
      unifi:
    volumes:
      - database:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.sh:ro
  server:
    depends_on:
      database:
        condition: service_started
        required: true
    environment:
      - MONGO_DBNAME=UNIFI
      - MONGO_HOST=database
      - MONGO_PASS=${UNIFI_DB_PASS}
      - MONGO_PORT=27017
      - MONGO_USER=UNIFI
      - TZ=Europe/London
    image: lscr.io/linuxserver/unifi-network-application:latest
    ports:
      - target: 3478
        published: "3478"
        protocol: udp
      - target: 10001
        published: "10001"
        protocol: udp
      - target: 8080
        published: "8080"
        protocol: tcp
      - target: 1900
        published: "1900"
        protocol: udp
      - target: 6789
        published: "6789"
        protocol: tcp
      - target: 5514
        published: "5514"
        protocol: udp
    labels:
      traefik.enable: true
      traefik.http.services.unifi.loadbalancer.server.port: 8443
      traefik.http.routers.unifi.rule: Host(`unifi.morrislan.net`)
      traefik.http.services.unifi.loadbalancer.server.scheme: https
      traefik.http.routers.unifi.entrypoints: websecure
      traefik.http.routers.unifi.tls.certresolver: myresolver
      traefik.docker.network: traefik_proxy
    restart: unless-stopped
    volumes:
      - config:/config
    networks:
      - unifi
      - traefik_proxy
volumes:
  database:
    driver: local

  config:
    driver: local

networks:
  unifi:
    external: false
  traefik_proxy:
    external: true