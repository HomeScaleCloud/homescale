argo-cd:
  global:
    domain: argocd.dev.homescale.cloud
  certificate:
    enabled: true
  server:
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
        cert-manager.io/cluster-issuer: letsencrypt
      tls: true
  configs:
    cm:
      dex.config:
        connectors:
          - type: microsoft
            id: microsoft
            name: Entra ID
            config:
              clientID: to be rmeoved and filled by terraform vars
              clientSecret: <path:vaults/common/items/argocd#oidc-client-secret>
              tenant: <path:vaults/common/items/entra#tenant>
              groups:
              - team-k8s-infra
              - sg-k8s-infra-admin
      admin.enabled: false
      statusbadge.enabled: true
      server.rbac.log.enforce.enable: "true"
      resource.exclusions: |
        - apiGroups:
          - cilium.io
          kinds:
          - CiliumIdentity
          clusters:
          - "*"
      timeout.reconciliation: 45s
    rbac:
      policy.csv:
        g, sg-k8s-infra-admin, role:admin

        p, role:argo-users, applications, get, *, allow
        p, role:argo-users, applications, refresh, *, allow
        p, role:argo-users, applications, sync, *, allow
        p, role:argo-users, projects, get, *, allow
        p, role:argo-users, repositories, get, *, allow
        p, role:argo-users, clusters, get, *, allow
        p, role:argo-users, accounts, get, *, allow
        p, role:argo-users, logs, get, *, deny
        p, role:argo-users, logs, get, */*, deny
        g, team-k8s-infra, role:argo-users
  notifications:
    subscriptions: |
      - recipients:
        - slack:argocd
        triggers:
        - on-update-failed
    templates:
      template.app-update-failed: |
        slack:
          attachments: |
            [{
              "title": "{{ .app.metadata.name}}",
              "title_link": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": "#E96D76",
              "fields": [
                {
                  "title": "Sync Status",
                  "value": "Failed",
                  "short": true
                },
                {
                  "title": "Finished At",
                  "value": "{{.app.status.operationState.finishedAt}}",
                  "short": true
                },
                {
                  "title": "Error",
                  "value": "{{.app.status.operationState.message}}",
                  "short": true
                }
              ]
            }]
    triggers:
      trigger.on-update-failed: |
        - description: Application update has failed
          send:
            - app-update-failed
          when: app.status.operationState.phase in ['Failed', 'Error', 'Unknown']