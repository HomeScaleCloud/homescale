apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metrics-helm
  namespace: argocd
  annotations:
    avp-kustomize.kubernetes.io/path: "vaults/common/items/metrics"
spec:
  project: default
  sources:
    - repoURL: https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      targetRevision: 74.2.2
      helm:
        valuesObject:
          grafana:
            service:
              type: ClusterIP
            grafana.ini:
              server: {}
                # root_url: https://metrics.dev.uk-boa-1.homescale.cloud/
              auth:
                disable_login_form: true
              auth.generic_oauth:
                enabled: true
                name: Entra ID
                allow_sign_up: true
                auto_login: true
                client_id: <path:vaults/common/items/metrics#oidc-client-id>
                client_secret: <path:vaults/common/items/metrics#oidc-client-secret>
                scopes: openid email profile offline_access User.Read
                auth_url: https://login.microsoftonline.com/<path:vaults/common/items/entra#tenant>/oauth2/v2.0/authorize
                token_url: https://login.microsoftonline.com/<path:vaults/common/items/entra#tenant>/oauth2/v2.0/token
                role_attribute_path: '"Admin"'
                role_attribute_strict: false
                allow_assign_grafana_admin: true
              users:
                auto_assign_org: true
                auto_assign_org_role: Admin
                allow_sign_up: true
            persistence:
              enabled: true
              type: pvc
              accessModes:
                - ReadWriteOnce
              size: 5Gi
            ingress:
              enabled: true
              annotations:
                cert-manager.io/cluster-issuer: letsencrypt
              hosts: {}
              tls:
                - hosts: {}
                  secretName: grafana-tls
            assertNoLeakedSecrets: false
            dashboardProviders:
              dashboardproviders.yaml:
                apiVersion: 1
                providers:
                  - name: 'grafana-dashboards-kubernetes'
                    orgId: 1
                    folder: 'Kubernetes'
                    type: file
                    disableDeletion: true
                    editable: true
                    options:
                      path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
            dashboards:
              grafana-dashboards-kubernetes:
                k8s-system-api-server:
                  url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
                  token: ''
                k8s-addons-prometheus:
                  url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-addons-prometheus.json
                  token: ''
                k8s-addons-trivy-operator:
                  url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-addons-trivy-operator.json
                  token: ''
                k8s-system-coredns:
                  url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
                  token: ''
                k8s-views-global:
                  url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
                  token: ''
                k8s-views-namespaces:
                  url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
                  token: ''
                k8s-views-nodes:
                  url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
                  token: ''
                k8s-views-pods:
                  url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
                  token: ''
            additionalDataSources:
              - name: Loki
                type: loki
                url: http://metrics-helm-loki.metrics.svc:3100
                access: proxy
          prometheus:
            annotations:
              argocd.argoproj.io/skip-health-check: 'true'
            prometheusSpec:
              podMonitorSelectorNilUsesHelmValues: false
              serviceMonitorSelectorNilUsesHelmValues: false
              serviceMonitorSelector: {}
              serviceMonitorNamespaceSelector: {}
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: 50Gi

    - repoURL: https://grafana.github.io/helm-charts
      chart: loki
      targetRevision: 6.31.0
      helm:
        valuesObject:
          loki:
            auth_enabled: false
            schemaConfig:
              configs:
                - from: "2024-04-01"
                  store: tsdb
                  object_store: s3
                  schema: v13
                  index:
                    prefix: loki_index_
                    period: 24h
            ingester:
              chunk_encoding: snappy
            tracing:
              enabled: true
            querier:
              max_concurrent: 4
          deploymentMode: SingleBinary
          minio:
            enabled: true

          singleBinary:
            replicas: 1

          backend:
            replicas: 0
          read:
            replicas: 0
          write:
            replicas: 0
          ingester:
            replicas: 0
          querier:
            replicas: 0
          queryFrontend:
            replicas: 0
          queryScheduler:
            replicas: 0
          distributor:
            replicas: 0
          compactor:
            replicas: 0
          indexGateway:
            replicas: 0
          bloomCompactor:
            replicas: 0
          bloomGateway:
            replicas: 0

    - repoURL: https://grafana.github.io/helm-charts
      chart: alloy
      targetRevision: 1.1.2
      helm:
        valuesObject:
          alloy:
            configMap:
              content: |-
                logging {
                  level  = "info"
                  format = "logfmt"
                }

                discovery.kubernetes "pods" {
                  role = "pod"
                }

                loki.source.kubernetes "pods" {
                  targets    = discovery.kubernetes.pods.targets
                  forward_to = [loki.write.loki.receiver]
                }

                loki.write "loki" {
                  endpoint {
                    url = "http://metrics-helm-loki.metrics.svc:3100/loki/api/v1/push"
                  }
                }

  destination:
    server: https://kubernetes.default.svc
    namespace: metrics
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
