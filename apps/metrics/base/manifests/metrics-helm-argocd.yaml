apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metrics-helm
  namespace: argocd
  annotations:
    avp-kustomize.kubernetes.io/path: "vaults/common/items/metrics"
spec:
  project: default
  sources:
    - repoURL: https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      targetRevision: 74.2.2
      helm:
        valuesObject:
          grafana:
            service:
              type: ClusterIP
            grafana.ini:
              server: {}
                # root_url: https://metrics.dev.uk-boa-1.homescale.cloud/
              auth:
                disable_login_form: true
              auth.generic_oauth:
                enabled: true
                name: Entra ID
                allow_sign_up: true
                client_id: <path:vaults/common/items/metrics#oidc-client-id>
                client_secret: <path:vaults/common/items/metrics#oidc-client-secret>
                scopes: openid email profile
                auth_url: https://login.microsoftonline.com/<path:vaults/common/items/entra#tenant>/oauth2/v2.0/authorize
                token_url: https://login.microsoftonline.com/<path:vaults/common/items/entra#tenant>/oauth2/v2.0/token
                api_url: https://graph.microsoft.com/oidc/userinfo
                role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || 'Viewer'"
            persistence:
              enabled: true
              type: pvc
              accessModes:
                - ReadWriteOnce
              size: 5Gi
            ingress:
              enabled: true
              annotations:
                cert-manager.io/cluster-issuer: letsencrypt
              hosts: {}
              tls:
                - hosts: {}
                  secretName: grafana-tls
            assertNoLeakedSecrets: false
            dashboards:
              k8s-views-global:
                gnetId: 15757
                revision: 1
                datasource: Prometheus
              k8s-views-namespaces:
                gnetId: 15758
                revision: 1
                datasource: Prometheus
              k8s-views-nodes:
                gnetId: 15759
                revision: 1
                datasource: Prometheus
              k8s-views-pods:
                gnetId: 15760
                revision: 1
                datasource: Prometheus
              k8s-system-api-server:
                gnetId: 15761
                revision: 1
                datasource: Prometheus
              k8s-system-coredns:
                gnetId: 15762
                revision: 1
                datasource: Prometheus
              k8s-addons-trivy-operator:
                gnetId: 16337
                revision: 1
                datasource: Prometheus
              k8s-addons-prometheus:
                gnetId: 19105
                revision: 1
                datasource: Prometheus
          prometheus:
            annotations:
              argocd.argoproj.io/skip-health-check: 'true'
            prometheusSpec:
              podMonitorSelectorNilUsesHelmValues: false
              serviceMonitorSelectorNilUsesHelmValues: false
              serviceMonitorSelector: {}
              serviceMonitorNamespaceSelector: {}
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: 50Gi

  destination:
    server: https://kubernetes.default.svc
    namespace: metrics
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
